package lesson5;

import java.util.Arrays;

public class StringsLesson {
    public static void main(String[] args) {
        // char 16 –±–∏—Ç - —Å–∏–º–≤–æ–ª Unicode
        // –æ—Ç 0 –¥–æ 65535 –æ—Ç '\u0000' –¥–æ '\uffff'

        char char1 = 'J'; // –°–∏–º–≤–æ–ª –≤ –æ–¥–∏–Ω–∞—Ä–Ω—ã—Ö –∫–∞–≤—ã—á–∫–∞—Ö
        char char2 = 74; // –ù–æ–º–µ—Ä —Å–∏–º–≤–æ–ª–∞
        char char3 = '\u0044'; // –®–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–µ—Ä–∏—á–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤ escape –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

        System.out.print(char1); // J
        System.out.print(char2); // J
        System.out.print(char3); // D
        System.out.println();

        // java.lang.String
        // –°—Ç—Ä–æ–∫–∏ –∑–∞–¥–∞—é—Ç—Å—è –ª–∏–±–æ –≤ –¥–≤–æ–π–Ω—ã—Ö –∫–∞–≤—ã—á–∫–∞—Ö: "—Å—Ç—Ä–æ–∫–∞",
        // –ª–∏–±–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –æ–¥–Ω–æ–≥–æ –∏–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤ –∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ new: new String()
        // –ï—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –¥–≤–æ–π–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏

        // –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ char
        char[] jjdChars = {'\u004a', '\u004a', '\u0044'};
        String jjdString = new String(jjdChars);
        System.out.println(jjdString); // JJD

        jjdString = "\u004a\u004a\u0044";
        jjdString = "JJD"; // —Ç–æ –∂–µ —Å–∞–º–æ–µ —á—Ç–æ –∏ –≤ –ø—Ä–µ–¥. —Å—Ç—Ä–æ–∫–µ
        System.out.println(jjdString); // JJD

        // –†–∞–∑–º–µ—Ä —Å—Ç—Ä–æ–∫–∏
        System.out.println(jjdString.length()); // JJD - 3
        System.out.println(jjdString.codePoints().count()); // 3

        char[] frogChars = {'\uD83D', '\uDC38'};
        String frogString = new String(frogChars);
        System.out.println(frogString);
        System.out.println(frogString.length()); // üê∏ - 2
        System.out.println(frogString.codePoints().count()); // 1 - –∫–æ–ª-–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ Unicode
        // –°—É—Ä—Ä–æ–≥–∞—Ç–Ω–∞—è –ø–∞—Ä–∞ - –∫–æ–≥–¥–∞ –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª Unicode –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –¥–≤—É–º—è char

        // –ü—É–ª —Å—Ç—Ä–æ–∫
        String course1 = "Java"; // —Å–æ–∑–¥. –æ–±—ä–µ–∫—Ç –≤ –ø—É–ª–µ —Å—Ç—Ä–æ–∫
        String course2 = "Java"; // –∏—â–µ—Ç—Å—è –≤ –ø—É–ª–µ, –Ω–∞—Ö–æ–¥–∏—Ç –∏ —Å–æ–∑–¥. —Å—Å—ã–ª–∫—É –Ω–∞ —É–∂–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
        String course3 = new String("Java"); // —Å–æ–∑–¥. –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –æ–±—ä–µ–∫—Ç–æ–≤, –Ω–µ –≤ –ø—É–ª–µ

        System.out.println(course1 == course2); // true
        System.out.println(course1 == course3); // false

        // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫
        course1 = "Java Junior Developer";
        course2 = "Java Junior DEVELOPER";

        System.out.println(course1.equals(course2)); // false // —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É // —Å–Ω–∞—á–∞–ª–∞ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —Ä–∞–∑–º–µ—Ä, –ø–æ—Ç–æ–º –ø–æ—Å–∏–º–≤–æ–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ
        System.out.println(course1.equalsIgnoreCase(course2)); // true // –Ω–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É // —Å–Ω–∞—á–∞–ª–∞ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —Ä–∞–∑–º–µ—Ä // –ø–æ—Ç–æ–º –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –≤–µ—Ä—Ö–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ—Å–∏–º–≤–æ–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ
        System.out.println(course1.compareTo(course2)); // 32 = 101 (–Ω–æ–º–µ—Ä Unicode –ø–µ—Ä–≤–æ–≥–æ –Ω–µ—Ä–∞–≤–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞) - 69 // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç int // 0 –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∏ —Ä–∞–≤–Ω—ã // –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞, —É –∫–æ—Ç–æ—Ä–æ–π –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥, –±–æ–ª—å—à–µ // –æ—Ç—Ä–∏—Ü. - –µ—Å–ª–∏ –Ω–∞–æ–±–æ—Ä–æ—Ç
        System.out.println(course1.compareToIgnoreCase(course2)); // 0

        String userData = null;
        String exit = "exit";
        // System.out.println(userData.equals("exit")); // –ó–¥–µ—Å—å exception java.lang.NullPointerException // —É null –Ω–µ–ª—å–∑—è –≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥
        System.out.println(exit.equals(userData)); // –ó–¥–µ—Å—å OK

        // –°—Ç—Ä–æ–∫–∏ –≤—ã—á–∏—Å–ª—è—é—Ç—Å—è –≤–æ –≤—Ä–µ–º—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏, –æ–±–µ —Å—Ç—Ä–æ–∫–∏ –ø–æ–ø–∞–¥—É—Ç –≤ –ø—É–ª –∏ –∏—Ö —Å—Å—ã–ª–∫–∏ –±—É–¥—É—Ç —Ä–∞–≤–Ω—ã
        String name1 = "–°—Ç—Ä–æ–∫–∏ –≤ Java";
        String name2 = "–°—Ç—Ä–æ–∫–∏" + " " + "–≤" + " " + "Java";
        System.out.println(name1 == name2); // true

        name1 = "–°—Ç—Ä–æ–∫–∏ ";
        name2 = "–≤ Java";
        System.out.println(name1 + name2 == name1 + name2); // false // –≤—ã—á–∏—Å–ª—è—é—Ç—Å—è –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, —Å–æ–∑–¥–∞–¥—É—Ç—Å—è —Ä–∞–∑–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã, —Å—Å—ã–ª–∫–∏ –±—É–¥—É—Ç –Ω–µ —Ä–∞–≤–Ω—ã

        String start = "start";
        for (int i = 0; i < 4; i++) {
            start += " " + i; // –ù–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∏ –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç. –¢–∞–∫ –¥–µ–ª–∞—Ç—å –Ω–µ –Ω–∞–¥–æ.
        }
        System.out.println(start);

        // –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –∏—Å–ø-—Å—è –¥–≤–∞ –∫–ª–∞—Å—Å–∞, –æ–Ω–∏ –∏–¥–µ–Ω—Ç–∏—á–Ω—ã, –Ω–æ
        // StringBuilder - —Ä–∞–±–æ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–µ–µ, –¥–ª—è –æ–¥–Ω–æ–ø–æ—Ç–æ—á–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º
        // StringBuffer - –ª—É—á—à–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –ø–æ—Ç–æ–∫–∞—Ö, –¥–ª—è –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º
        // –û–Ω–∏ –Ω–µ —Å–æ–∑–¥–∞—é—Ç –Ω–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã –ø—Ä–∏ –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏–∏

        StringBuilder sb = new StringBuilder();
        sb.append(name1).append(name2);
        String res = sb.toString(); // –û–±—ä–µ–∫—Ç java.lang.String —Å–æ–∑–¥–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –º–µ—Ç–æ–¥–∞ toString
        System.out.println(res);
        System.out.println(sb); // println –≤—ã–∑—ã–≤–∞–µ—Ç —É –æ–±—ä–µ–∫—Ç–∞ –º–µ—Ç–æ–¥ toString

        // –ü–µ—Ä–µ–ø–∏—à–µ–º —Ü–∏–∫–ª
        sb = new StringBuilder("start");
        for (int i = 0; i < 4; i++) {
            sb.append(" ").append(i); // –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –æ–±—ä–µ–∫—Ç " " —Å–æ–∑–¥–∞–µ—Ç—Å—è –≤ –ø—É–ª–µ
            // –ö–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—è –±–µ–∑ –≤—ã—Ä–∞–∂–µ–Ω–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, " " + "a") –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏, –æ–±—ä–µ–∫—Ç—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –≤ –ø—É–ª–µ
            // " " + i -- —Å–æ–∑–¥–∞–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, –ø–∞–º—è—Ç—å –ø–æ—Ç—Ä–µ–±–ª—è–µ—Ç—Å—è
        }
        res = sb.toString();
        System.out.println(res);

        // –ó–∞–¥–∞–Ω–∏–µ
        String[] animals = {"–∫–æ—Ç", "–ø–µ—Å", "–º—ã—à—å"};
        // —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, –∫–æ—Ç–æ—Ä—ã–π –≤ –¥–≤–∞ —Ä–∞–∑–∞ –±–æ–ª—å—à–µ animals
        // –≤ —Ü–∏–∫–ª–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Ä–∞–Ω–¥–æ–º–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –∏–∑ –º–∞—Å—Å–∏–≤–∞ animals
        String[] animals2 = new String[animals.length * 2];
        for (int i = 0; i < animals2.length; i++) {
            animals2[i] = animals[(int)(Math.random() * animals.length)];
        }
        System.out.println(Arrays.toString(animals2));

        // –£–±—Ä–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã: –Ω–∞—á–∞–ª–æ, –∫–æ–Ω–µ—Ü —Å—Ç—Ä–æ–∫–∏
        // trim() —É–±–∏—Ä–∞–µ—Ç –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –º–µ–Ω—å—à–µ–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ u0020
        String someStr = " –°—Ç—Ä–æ–∫–∞ ";
        someStr = someStr.trim();

        // Java 11: —É–±–∏—Ä–∞–µ—Ç –ª—é–±–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, u3000)
        // strip() - —Å –¥–≤—É—Ö —Å—Ç–æ—Ä–æ–Ω
        // stripLeading() - —Å –Ω–∞—á–∞–ª–∞ —Å—Ç—Ä–æ–∫–∏
        // stripTrailing() - —Å –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏

        // –ü–æ–ª—É—á–∏—Ç—å –º–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤ –∏–∑ —Å—Ç—Ä–æ–∫–∏
        char[] formStr = someStr.toCharArray();
        System.out.println(Arrays.toString(formStr));

        String names = "Java, Kotlin, Python";
        String[] namesArr = names.split(", "); // –†–∞–∑–±–∏–≤–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –Ω–∞ –º–∞—Å—Å–∏–≤ –ø–æ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—é
        System.out.println(Arrays.toString(namesArr));

        names = String.join("! ", namesArr);
        // names = String.join("! ", "—Å—Ç—Ä–æ–∫–∞1", "—Å—Ç—Ä–æ–∫–∞ 2");
        System.out.println(names);
    }
}
